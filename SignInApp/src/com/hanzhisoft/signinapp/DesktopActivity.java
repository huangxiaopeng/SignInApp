package com.hanzhisoft.signinapp;import java.lang.reflect.Field;import java.lang.reflect.Method;import java.util.ArrayList;import com.hanzhisoft.signinapp.R;import com.hanzhisoft.signinapp.data.SignInDataSource;import com.hanzhisoft.signinapp.note.NoteMainActivity;import com.hanzhisoft.signinapp.user.User;import com.hanzhisoft.signinapp.user.UserDataSource;import android.app.ActionBar;import android.app.ActionBar.OnNavigationListener;import android.app.Activity;import android.app.FragmentManager;import android.app.FragmentTransaction;import android.content.Intent;import android.os.Bundle;import android.view.KeyEvent;import android.view.Menu;import android.view.MenuItem;import android.view.View;import android.view.ViewConfiguration;import android.view.Window;import android.widget.ArrayAdapter;import android.widget.SpinnerAdapter;import android.widget.TextView;/** * @title: DesktopActivity.java * @description: 主界面 * @copyright: Copyright (c) 2014 * @company: HanZhiSoft * @author HuangXiaoPeng * @date 2014-12-7 * @version 1.0 */public class DesktopActivity extends Activity {	TextView sign_icon;	TextView signin_histo_icon;	TextView note_icon;	public UserDataSource userData;		//用于存放未finish的activity	public static ArrayList<Activity> holdingActivity = new ArrayList<>();	@SuppressWarnings("deprecation")	@Override	protected void onCreate(Bundle savedInstanceState) {		// TODO Auto-generated method stub		super.onCreate(savedInstanceState);		holdingActivity.add(this);		setContentView(R.layout.desktop_layout);		userData = new UserDataSource(DesktopActivity.this);		sign_icon = (TextView) findViewById(R.id.sign_activity);		signin_histo_icon = (TextView) findViewById(R.id.signin_histo);		note_icon = (TextView) findViewById(R.id.note_icon);		initUIlistner();		hackOverFlow();		// // 生成一个SpinnerAdapter		// SpinnerAdapter adapter = ArrayAdapter		// .createFromResource(this, R.array.settings,		// android.R.layout.simple_spinner_dropdown_item);		// // 得到ActionBar		//		// ActionBar actionBar = getActionBar();		// // 将ActionBar的操作模型设置为NAVIGATION_MODE_LIST		// actionBar.setNavigationMode(ActionBar.NAVIGATION_MODE_LIST);		// // 为ActionBar设置下拉菜单和监听器		// actionBar.setListNavigationCallbacks(adapter, new		// DropDownListenser());	}	// 强制显示OverFlow按钮	private void hackOverFlow() {		try {			ViewConfiguration config = ViewConfiguration.get(this);			Field menuKeyField = ViewConfiguration.class					.getDeclaredField("sHasPermanentMenuKey");			if (menuKeyField != null) {				menuKeyField.setAccessible(true);				menuKeyField.setBoolean(config, false);			}		} catch (Exception e) {			e.printStackTrace();		}	}	@Override	public boolean onKeyDown(int keyCode, KeyEvent event) {		// TODO Auto-generated method stub		if (keyCode == KeyEvent.KEYCODE_BACK) {			Intent i = new Intent(Intent.ACTION_MAIN);			i.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);			i.addCategory(Intent.CATEGORY_HOME);			startActivity(i);			return true;		}		return super.onKeyDown(keyCode, event);	}	@Override	public boolean onMenuOpened(int featureId, Menu menu) {		// TODO Auto-generated method stub		setOverflowIconVisible(featureId, menu);		return super.onMenuOpened(featureId, menu);	}	// 显示actionbar中下拉菜单的图标	public static void setOverflowIconVisible(int featureId, Menu menu) {		if (featureId == Window.FEATURE_ACTION_BAR && menu != null) {			if (menu.getClass().getSimpleName().equals("MenuBuilder")) {				try {					Method m = menu.getClass().getDeclaredMethod(							"setOptionalIconsVisible", Boolean.TYPE);					m.setAccessible(true);					m.invoke(menu, true);				} catch (Exception e) {				}			}		}	}	private void initUIlistner() {		note_icon.setOnClickListener(new View.OnClickListener() {			@Override			public void onClick(View v) {				Intent intent = new Intent(DesktopActivity.this,						NoteMainActivity.class);				startActivity(intent);			}		});		sign_icon.setOnClickListener(new View.OnClickListener() {			@Override			public void onClick(View v) {				Intent intent = new Intent(DesktopActivity.this,						SignInActivity.class);				startActivity(intent);			}		});		signin_histo_icon.setOnClickListener(new View.OnClickListener() {			@Override			public void onClick(View v) {				Intent intent = new Intent(DesktopActivity.this,						SignInListActivity.class);				startActivity(intent);			}		});	}	@Override	public boolean onOptionsItemSelected(MenuItem item) {		// Handle action bar item clicks here. The action bar will		// automatically handle clicks on the Home/Up button, so long		// as you specify a parent activity in AndroidManifest.xml.		int id = item.getItemId();		if (id == android.R.id.home) {			Intent intent = new Intent(DesktopActivity.this,					LoginActivity.class);			userData.logout();			startActivity(intent);			finish();		} else if (id == R.id.set_icon) {			Intent intent = new Intent(DesktopActivity.this,					SettingActivity.class);			startActivity(intent);			// SignInDataSource sis = new			// SignInDataSource(DesktopActivity.this);			// sis.removeAll();		}		return super.onOptionsItemSelected(item);	}	@Override	public boolean onCreateOptionsMenu(Menu menu) {		// Inflate the menu; this adds items to the action bar if it is present.		getMenuInflater().inflate(R.menu.main, menu);		return true;	}	class DropDownListenser implements OnNavigationListener {		// 得到和SpinnerAdapter里一致的字符数组		String[] listNames = getResources().getStringArray(R.array.settings);		/* 当选择下拉菜单项的时候，将Activity中的内容置换为对应的Fragment */		public boolean onNavigationItemSelected(int itemPosition, long itemId) {			// 生成自定的Fragment			FragmentManager manager = getFragmentManager();			FragmentTransaction transaction = manager.beginTransaction();			// 将Activity中的内容替换成对应选择的Fragment			transaction.commit();			return true;		}	}}